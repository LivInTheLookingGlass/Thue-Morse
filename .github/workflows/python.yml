name: Python tests

on:
  push:
    paths:
    - 'code/**'
    - '.github/workflows/python.yml'
  schedule:
  - cron: "0 0 1 * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python:
    strategy:
      fail-fast: false
      matrix:
        selection:
        - lint
        - base_2
        - base_2_12
        - base_n_2
        - base_n_3
        - base_n_4
        - base_n_5
        - base_n_6
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: Fetch test dependencies
      run: python -m pip install -r requirements.txt

    - name: Run tests (${{matrix.selection}})
      run: |
        ulimit -S -v 14680064
        ulimit -S -m 14680064
        ulimit -H -a
        ulimit -S -a
        case ${{matrix.selection}} in
          lint)
            python -m pytest --isort --flake8 --mypy --mypy-ignore-missing-imports -k "not test_compare"
            ;;
          base_2)
            test_len=29
            echo "Testing up to 2^$test_len"
            sed -i "s/^test_len = .*/test_len = 2**$test_len/" code/test_seq.py
            python -m pytest -k "test_compare_2_1 and not 2_12" --maxfail=2
            ;;
          base_2_12)
            test_len=17
            echo "Testing up to 2^$test_len"
            sed -i "s/^test_len = .*/test_len = 2**$test_len/" code/test_seq.py
            python -m pytest -k "2_12" --timeout=21585
            ;;
          *)
            IFS='_' read -r prefix1 prefix2 definition <<< "${{matrix.selection}}"
            pytest_regex="test_compare_n_1_to_n[$definition-"
            echo $pytest_regex
            if [ $start -le 8 ]; then
              test_len=30
            elif [ $start -le 16 ]; then
              test_len=30
            else
              test_len=30
            fi
            echo "Testing up to 2^$test_len"
            sed -i "s/^test_len = .*/test_len = 2**$test_len/" code/test_seq.py
            python -m pytest -k "$pytest_regex" --maxfail=2
            ;;
        esac
