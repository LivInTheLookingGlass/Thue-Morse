name: Python tests

on:
  push:
    paths:
    - 'dev/**'
    - '.github/workflows/python.yml'
  schedule:
  - cron: "0 0 1 * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: Fetch test dependencies
      run: |
        sudo apt-get install -y build-essential cmake libgmp-dev
        python -O -m pip install -r requirements.txt

    - name: Run Linters
      run: python -O -m pytest --isort --flake8 --mypy --mypy-ignore-missing-imports -k "not (test_compare or z3 or benchmark or free)"

  benchmark:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: Fetch test dependencies
      run: python -O -m pip install -r requirements.txt

    - name: Run Benchmarks
      run: python -O -m pytest -k "benchmark" --benchmark-enable --benchmark-sort=fullname --benchmark-group-by="param:c" --benchmark-cprofile=ncalls_recursion --benchmark-cprofile=ncalls --benchmark-cprofile=tottime --benchmark-cprofile=tottime_per --benchmark-cprofile=cumtime --benchmark-cprofile=cumtime_per --benchmark-verbose --benchmark-min-rounds=1

  sorta-square-free:
    runs-on: ubuntu-latest
    env:
      swap_size: 13  # in GiB
      max_mem: 15
    steps:
    - uses: actions/checkout@v4

    - name: Use Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: Fetch test dependencies
      run: |
        sudo apt-get install -y build-essential cmake libgmp-dev
        python -O -m pip install -r requirements.txt

    - name: Create and enable swapfile
      run: |
        sudo fallocate -l ${{env.swap_size}}G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        sudo swapon --show

    - name: Run sorta-square-free Tests
      run: |
        ulimit -S -v $(( (4 + max_mem + swap_size) * 1024 * 1024)); ulimit -H -v; ulimit -S -v
        python -O -m pytest -k "square and free" -n auto

    - name: Upload tar artifact
      uses: actions/upload-artifact@v3
      with:
        name: prover-artifact
        path: prover.tar.gz

  overlap-free:
    runs-on: ubuntu-latest
    env:
      swap_size: 13  # in GiB
      max_mem: 15
    steps:
    - uses: actions/checkout@v4

    - name: Use Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: Fetch test dependencies
      run: |
        sudo apt-get install -y build-essential cmake libgmp-dev
        python -O -m pip install -r requirements.txt

    - name: Create and enable swapfile
      run: |
        sudo fallocate -l ${{env.swap_size}}G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        sudo swapon --show

    - name: Run overlap-free Tests
      run: |
        ulimit -S -v $(( (4 + max_mem + swap_size) * 1024 * 1024)); ulimit -H -v; ulimit -S -v
        python -O -m pytest -k "free" -n auto

    - name: Upload tar artifact
      uses: actions/upload-artifact@v3
      with:
        name: prover-artifact
        path: prover.tar.gz

  cube-free:
    runs-on: ubuntu-latest
    env:
      swap_size: 13  # in GiB
      max_mem: 15
    steps:
    - uses: actions/checkout@v4

    - name: Use Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: Fetch test dependencies
      run: |
        sudo apt-get install -y build-essential cmake libgmp-dev
        python -O -m pip install -r requirements.txt

    - name: Create and enable swapfile
      run: |
        sudo fallocate -l ${{env.swap_size}}G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        sudo swapon --show

    - name: Run cube-free Tests
      run: |
        ulimit -S -v $(( (4 + max_mem + swap_size) * 1024 * 1024)); ulimit -H -v; ulimit -S -v
        python -O -m pytest -k "free" -n auto

    - name: Upload tar artifact
      uses: actions/upload-artifact@v3
      with:
        name: prover-artifact
        path: prover.tar.gz

  satisfiable:
    runs-on: ubuntu-latest
    env:
      swap_size: 13  # in GiB
      max_mem: 15
    steps:
    - uses: actions/checkout@v4

    - name: Use Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: Fetch test dependencies
      run: |
        sudo apt-get install -y build-essential cmake libgmp-dev
        python -O -m pip install -r requirements.txt

    - name: Create and enable swapfile
      run: |
        sudo fallocate -l ${{env.swap_size}}G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        sudo swapon --show

    - name: Run Z3 Tests
      run: |
        ulimit -S -v $(( (4 + max_mem + swap_size) * 1024 * 1024)); ulimit -H -v; ulimit -S -v
        python -O -m pytest -k "z3" -n 2

    - name: Create tar archive
      run: |
        tar -czf prover.tar.gz prover

    - name: Upload tar artifact
      uses: actions/upload-artifact@v3
      with:
        name: prover-artifact
        path: prover.tar.gz

  base_2:
    strategy:
      fail-fast: false
      matrix:
        def:
        - 2_02
        - 2_03
        - 2_04
        - 2_05
        - 2_06
        - 2_07
        - 2_08
        - 2_09
        - 2_10
        - 2_11
        - 2_12
        - 2_13
        - 2_14
        - 2_15
        - 2_16
        - 2_17
        - 2_18
        - 2_19
        - 2_20
        - 2_21
        - n_01
        - n_02
        - n_03
        - n_04
        - n_05
        - n_06
        - n_07
        - n_08
        - n_09
    runs-on: ubuntu-latest
    env:
      swap_size: 12  # in GiB
      max_mem: 15
    name: Test ${{matrix.def}} in base 2
    steps:
    - uses: actions/checkout@v4

    - name: Use Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: Fetch test dependencies
      run: |
        sudo apt-get install -y build-essential cmake libgmp-dev
        python -O -m pip install -r requirements.txt

    - name: Create and enable swapfile
      run: |
        sudo fallocate -l ${{env.swap_size}}G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        sudo swapon --show

    - name: Run tests (${{matrix.def}})
      run: |
        ulimit -S -v $(( (4 + max_mem + swap_size) * 1024 * 1024)); ulimit -H -v; ulimit -S -v
        case ${{matrix.def}} in
          2_0[26789]|2_1[01246])
            test_len=34
            ;;
          2_0[34]|2_1[35]|n_0[567])
            test_len=32
            ;;
          2_05|n_0[1234])
            test_len=30
            ;;
          n_08)
            test_len=27
            ;;
          2_17|2_21)
            test_len=18
            ;;
          2_15|n_09)
            test_len=17
            ;;
          2_19|2_20)
            test_len=6
            ;;
          2_18)
            test_len=5
            ;;
          *)
            echo "Unknown definition; limit not set"
            exit -1
            ;;
        esac
        sed -i "s/^test_len = .*/test_len = 2**$test_len/" dev/test_seq.py
        echo "Testing up to 2^$test_len"

        source .mem_mon.sh
        monitor_memory &
        monitor_pid=$!

        python -O -m pytest -k "not (benchmark or z3 or free) and ${{matrix.def}}" --timeout=21555

        kill $monitor_pid

  base_n:
    strategy:
      fail-fast: false
      matrix:
        bases:
        - 003-016
        - 017-032
        - 033-048
        - 049-064
        - 065-080
        - 081-096
        - 097-112
        - 113-128
        - 129-144
        - 145-160
        - 161-176
        - 177-192
        - 193-208
        - 209-224
        - 225-240
        - 241-256
        def: [2, 3, 4, 5, 6, 7, 8, 9]
        exclude:
        - def: 9
          bases: 129-144
        - def: 9
          bases: 145-160
        - def: 9
          bases: 161-176
        - def: 9
          bases: 177-192
        - def: 9
          bases: 193-208
        - def: 9
          bases: 209-224
        - def: 9
          bases: 225-240
        - def: 9
          bases: 241-256

    runs-on: ubuntu-latest
    env:
      swap_size: 12  # in GiB
      max_mem: 15
    name: Test n_0${{matrix.def}} in bases ${{matrix.bases}}

    steps:
    - uses: actions/checkout@v4

    - name: Use Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: Fetch test dependencies
      run: |
        sudo apt-get install -y build-essential cmake libgmp-dev
        python -O -m pip install -r requirements.txt

    - name: Create and enable swapfile
      run: |
        sudo fallocate -l ${{env.swap_size}}G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        sudo swapon --show

    - name: Run tests (${{matrix.def}} ${{matrix.bases}})
      run: |
        ulimit -S -v $(( (4 + max_mem + swap_size) * 1024 * 1024)); ulimit -H -v; ulimit -S -v
        case ${{matrix.def}}-${{matrix.bases}} in
          2-209|2-225|2-241*)
            test_len=28
            ;;
          [267]-*)
            test_len=29
            ;;
          [3458]-*)
            test_len=27
            ;;
          9-003*)
            test_len=16
            ;;
          9-017*)
            test_len=15
            ;;
          9-033*)
            test_len=13
            ;;
          9-049*)
            test_len=12
            ;;
          9-049*)
            test_len=12
            ;;
          9-065*)
            test_len=11
            ;;
          9-081*)
            test_len=10
            ;;
          9-097*)
            test_len=9
            ;;
          9-113*)
            test_len=8
            ;;
          *)
            echo "Unknown definition; limit not set"
            exit -1
            ;;
        esac
        IFS='-' read -r start stop <<< "${{matrix.bases}}"
        start=$((10#$start))
        stop=$((10#$stop))
        bases=()
        for (( i=start; i<=stop; i++ )); do
            bases+=("$i")
        done
        base_regex=""
        for (( i=start; i<=stop; i++ )); do
            # Format base as base_XXX (ensure it's three digits)
            formatted_base=$(printf "%03d" "$i")
            base_regex+="base_${formatted_base} or "
        done
        base_regex="${base_regex% or }"
        echo "Testing up to 2^$test_len"
        sed -i "s/^test_len = .*/test_len = 2**$test_len/" dev/test_seq.py
        echo $base_regex

        source .mem_mon.sh
        monitor_memory &
        monitor_pid=$!

        python -O -m pytest -k "not (benchmark or z3 or free) and ${{matrix.def}}- and ($base_regex)"

        kill $monitor_pid
