Thue-Morse Paper Draft
======================

In this repo, I keep all notes and files related to my research on extending the Thue-Morse sequence to n-ary
rigorously. It is structured as:

Repository Structure
~~~~~~~~~~~~~~~~~~~~

.. code-block:: text

  /
  ├─ LICENSE                   # License file
  ├─ README.rst                # Project readme
  ├─ update_from_overleaf.bat  # Script to update the repository from Overleaf ZIP and PDF
  ├─ update_from_overleaf.sh   # ^^^
  ├─ rendered.pdf              # Compiled PDF output of the Overleaf project
  ├─ src/                      # Directory containing the LaTeX source files
  │  ├─ main.tex                 # Main LaTeX file (the entry point for compiling)
  │  ├─ macros.tex               # LaTeX file that contains utility functions
  │  ├─ references.bib           # Bibliography file (uses BibTeX for citations)
  │  ├─ figures/                 # Directory for image files used
  │  └─ notes/                   # Directory for notes used in writing the paper
  ├─ prover/                   # Directory containing files generated by Z3Py
  │  ├─ proof/                   # Z3Py proof trees comparing each definition pairwise
  │  │  ├─ p2/                     # ... for base 2
  │  │  └─ pn/                     # ... for base n
  │  ├─ model/                   # Z3Py representations of the different functions used
  │  │  ├─ p2/
  │  │  └─ pn/
  │  └─ smt/                     # An SMT2-lib representation of each definition comparison
  │     ├─ p2/
  │     └─ pn/
  └─ dev/                      # Directory with associated code
     ├─ README.rst               # Readme for associated code
     ├─ __init__.py              # Utilities that let you collect different definitions
     ├─ args.py                  # A utility file that deals with command line argument parsing
     ├─ test_seq.py              # A test file that allows you to check sequence equality
     ├─ p2/                      # Code representation of definitions in base 2
     │  ├─ __init__.py             # Empty file that allows this folder to be used as a module
     │  └─ d[0-9][0-9].py          # The file for def. [0-9][0-9] of the Thue-Morse Seq. for 2 players
     └─ pn/                      # Code representation of definitions in base n
        ├─ __init__.py             # Empty file that allows this folder to be used as a module
        └─ d[0-9][0-9].py          # The file for def. [0-9][0-9] of the Thue-Morse Seq. for n players

Code Structure
--------------

In each file, there are two representations of each definition. The first is always formatted as
``p{2,n}_d[0-9][0-9]``. It will always take in an (optional) argument that represents the base of the generated
sequence. If it is a `p2` function, then this argument will be ignored. The function will then return an
``Iterator[int]`` that generates the sequence.

The second representation is always named ``to_z3()``. It takes in a single argument that is either an integer or a
Z3Py ``IntSort``, representing the base of the generated sequence. As above, if it is a ``p2`` file, this argument is
ignored. It will always return the Z3Py function representation of this definition, allowing for easy comparisons in
the test suite. Artifacts generated from this are stored in the ``prover/`` directory, as shown above.

Usage
~~~~~

To generate each definition of the Thue-Morse Sequence and its extensions, call:

.. code-block::

  python -m dev.p{2,n}.d[0-9][0-9] <items to generate> [<number of players, if n players>]

To run the update script, provide the zip file and the PDF file as arguments:

.. code-block:: bash

  ./update_overleaf_repo.sh project.zip output.pdf ["commit message"]

In a Windows environment, it runs similarly, though you need to use the batch file version:

.. code-block:: bat

  ./update_overleaf_repo.bat project.zip output.pdf ["commit message"]

Square brackets indicate an optional argument. If a commit message is not provided, git will prompt you for one.
