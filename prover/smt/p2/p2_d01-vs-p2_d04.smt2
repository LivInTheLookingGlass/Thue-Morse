; benchmark generated from python API
(set-info :status unknown)
(declare-fun s () Int)
(define-funs-rec ( ( T2_04 ((x!1 Int)) Int)
                   ( t2_04 ((x!1 Int)) String)
                   ( sub2_04 ((x!1 String) (x!2 String)) String)
                   ( ilog2_2_04 ((x!1 Int)) Int)
                   ( T2_01 ((x!1 Int)) Int)
                   ( p2_01 ((x!1 Int)) Int))
                 ( (let ((a!1 (str.substr ((_ t2_04 0)
                                            (+ ((_ ilog2_2_04 0) x!1) 1))
                                          x!1
                                          1)))
                     (ite (= a!1 "0") 0 1))
                   (ite (= x!1 0)
                        "0"
                        ((_ sub2_04 0) "" ((_ t2_04 0) (- x!1 1))))
                   (let ((a!1 (str.++ x!1
                                      (ite (= (str.substr x!2 0 1) "0")
                                           "01"
                                           "10")
                                      (str.substr x!2 1 (- (str.len x!2) 1)))))
                     (ite (= (str.len x!2) 0) x!1 a!1))
                   (ite (<= x!1 1) 0 (+ 1 ((_ ilog2_2_04 0) (div x!1 2))))
                   (mod ((_ p2_01 0) x!1) 2)
                   (ite (= x!1 0) 0 (+ ((_ p2_01 0) (div x!1 2)) x!1))))
(assert
 (forall ((n Int) )(let ((?x411 ((_ T2_04 0) n)))
 (let (($x407 (= ?x411 n)))
 (let ((?x410 ((_ T2_01 0) n)))
 (let (($x413 (= ?x410 n)))
 (let (($x424 (and $x413 $x407)))
 (let (($x387 (< n s)))
 (let (($x426 (>= n 0)))
 (let (($x428 (and $x426 $x387)))
 (=> $x428 $x424))))))))))
 )
(assert
 (let ((?x381 ((_ T2_01 0) s)))
 (= ?x381 1)))
(assert
 (let ((?x379 ((_ T2_04 0) s)))
 (= ?x379 1)))
(assert
 (forall ((n Int) )(let ((?x411 ((_ T2_04 0) n)))
(let ((?x410 ((_ T2_01 0) n)))
(let (($x493 (= ?x410 ?x411)))
(let (($x426 (>= n 0)))
(=> $x426 $x493))))))
)
(check-sat)
