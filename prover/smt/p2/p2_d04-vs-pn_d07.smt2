; benchmark generated from python API
(set-info :status unknown)
(declare-fun s () Int)
(define-funs-rec ( ( Tn_07 ((x!1 Int)) Int)
                   ( ilog2 ((x!1 Int) (x!2 Int)) Int)
                   ( xorn ((x!1 Int) (x!2 Int) (x!3 Int)) Int)
                   ( T2_04 ((x!1 Int)) Int)
                   ( t2_04 ((x!1 Int)) String)
                   ( sub2_04 ((x!1 String) (x!2 String)) String)
                   ( ilog2_2_04 ((x!1 Int)) Int))
                 ( (let ((a!1 (+ ((_ ilog2 0) ((_ xorn 0) x!1 (- x!1 1) s) s)
                                 ((_ Tn_07 0) (- x!1 1))
                                 1)))
                     (ite (< x!1 s) x!1 (mod a!1 s)))
                   (ite (<= x!1 1) 0 (+ 1 ((_ ilog2 0) (div x!1 x!2) x!2)))
                   (let ((a!1 (+ (mod (+ (mod x!1 x!3) (mod x!2 x!3)) x!3)
                                 (* x!3
                                    ((_ xorn 0) (div x!1 x!3) (div x!2 x!3) x!3)))))
                     (ite (= x!1 0) x!2 (ite (= x!2 0) x!1 a!1)))
                   (let ((a!1 (str.substr ((_ t2_04 0)
                                            (+ ((_ ilog2_2_04 0) x!1) 1))
                                          x!1
                                          1)))
                     (ite (= a!1 "0") 0 1))
                   (ite (= x!1 0)
                        "0"
                        ((_ sub2_04 0) "" ((_ t2_04 0) (- x!1 1))))
                   (let ((a!1 (str.++ x!1
                                      (ite (= (str.substr x!2 0 1) "0")
                                           "01"
                                           "10")
                                      (str.substr x!2 1 (- (str.len x!2) 1)))))
                     (ite (= (str.len x!2) 0) x!1 a!1))
                   (ite (<= x!1 1) 0 (+ 1 ((_ ilog2_2_04 0) (div x!1 2))))))
(assert
 (forall ((n Int) )(let ((?x406 ((_ Tn_07 0) n)))
 (let (($x407 (= ?x406 n)))
 (let ((?x408 ((_ T2_04 0) n)))
 (let (($x409 (= ?x408 n)))
 (let (($x410 (and $x409 $x407)))
 (let (($x387 (< n s)))
 (let (($x411 (>= n 0)))
 (let (($x412 (and $x411 $x387)))
 (=> $x412 $x410))))))))))
 )
(assert
 (let ((?x370 ((_ T2_04 0) s)))
 (= ?x370 1)))
(assert
 (let ((?x322 ((_ Tn_07 0) s)))
 (= ?x322 1)))
(assert
 (forall ((n Int) )(let ((?x406 ((_ Tn_07 0) n)))
(let ((?x408 ((_ T2_04 0) n)))
(let (($x440 (= ?x408 ?x406)))
(let (($x411 (>= n 0)))
(=> $x411 $x440))))))
)
(check-sat)
