; benchmark generated from python API
(set-info :status unknown)
(define-funs-rec ( ( T2_12 ((x!1 Int)) Int)
                   ( e2_12 ((x!1 Int)) Int)
                   ( fe2_12 ((x!1 Int)) Int)
                   ( p2_12 ((x!1 Int)) Int)
                   ( T2_05 ((x!1 Int)) Int)
                   ( t2_05 ((x!1 Int)) String)
                   ( rot2_05 ((x!1 String) (x!2 Int)) String)
                   ( ilog2_2_05 ((x!1 Int)) Int))
                 ( (mod (+ ((_ e2_12 0) x!1) 1) 2)
                   (let ((a!1 ((_ fe2_12 0) (+ ((_ e2_12 0) (- x!1 1)) 1))))
                     (ite (= x!1 0) 0 a!1))
                   (ite (= (mod ((_ p2_12 0) x!1) 2) 0)
                        x!1
                        ((_ fe2_12 0) (+ x!1 1)))
                   (ite (= x!1 0) 0 (+ ((_ p2_12 0) (div x!1 2)) x!1))
                   (let ((a!1 (str.substr ((_ t2_05 0)
                                            (+ ((_ ilog2_2_05 0) x!1) 1))
                                          x!1
                                          1)))
                     (ite (= a!1 "0") 0 1))
                   (let ((a!1 (div (str.len ((_ t2_05 0) (- x!1 1))) 2)))
                   (let ((a!2 (str.++ ((_ t2_05 0) (- x!1 1))
                                      ((_ rot2_05 0)
                                        ((_ t2_05 0) (- x!1 1))
                                        a!1))))
                     (ite (= x!1 0) "0" (ite (= x!1 1) "01" a!2))))
                   (str.++ (str.substr x!1 x!2 (- (str.len x!1) x!2))
                           (str.substr x!1 0 x!2))
                   (ite (<= x!1 1) 0 (+ 1 ((_ ilog2_2_05 0) (div x!1 2))))))
(assert
 (forall ((n Int) )(let ((?x383 ((_ T2_12 0) n)))
(let ((?x382 ((_ T2_05 0) n)))
(let (($x406 (= ?x382 ?x383)))
(let (($x381 (>= n 0)))
(=> $x381 $x406))))))
)
(check-sat)
