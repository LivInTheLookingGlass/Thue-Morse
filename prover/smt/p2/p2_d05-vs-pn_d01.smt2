; benchmark generated from python API
(set-info :status unknown)
(declare-fun s () Int)
(define-funs-rec ( ( Tn_01 ((x!1 Int)) Int)
                   ( pn_01 ((x!1 Int)) Int)
                   ( T2_05 ((x!1 Int)) Int)
                   ( t2_05 ((x!1 Int)) String)
                   ( rot2_05 ((x!1 String) (x!2 Int)) String)
                   ( ilog2_2_05 ((x!1 Int)) Int))
                 ( (mod ((_ pn_01 0) x!1) s)
                   (ite (= x!1 0) 0 (+ ((_ pn_01 0) (div x!1 s)) x!1))
                   (let ((a!1 (str.substr ((_ t2_05 0)
                                            (+ ((_ ilog2_2_05 0) x!1) 1))
                                          x!1
                                          1)))
                     (ite (= a!1 "0") 0 1))
                   (let ((a!1 (div (str.len ((_ t2_05 0) (- x!1 1))) 2)))
                   (let ((a!2 (str.++ ((_ t2_05 0) (- x!1 1))
                                      ((_ rot2_05 0)
                                        ((_ t2_05 0) (- x!1 1))
                                        a!1))))
                     (ite (= x!1 0) "0" (ite (= x!1 1) "01" a!2))))
                   (str.++ (str.substr x!1 x!2 (- (str.len x!1) x!2))
                           (str.substr x!1 0 x!2))
                   (ite (<= x!1 1) 0 (+ 1 ((_ ilog2_2_05 0) (div x!1 2))))))
(assert
 (forall ((n Int) )(let ((?x406 ((_ Tn_01 0) n)))
 (let (($x407 (= ?x406 n)))
 (let ((?x408 ((_ T2_05 0) n)))
 (let (($x409 (= ?x408 n)))
 (let (($x410 (and $x409 $x407)))
 (let (($x387 (< n s)))
 (let (($x411 (>= n 0)))
 (let (($x412 (and $x411 $x387)))
 (=> $x412 $x410))))))))))
 )
(assert
 (forall ((n Int) )(let ((?x406 ((_ Tn_01 0) n)))
(let ((?x408 ((_ T2_05 0) n)))
(let (($x383 (= ?x408 ?x406)))
(let (($x411 (>= n 0)))
(=> $x411 $x383))))))
)
(check-sat)
