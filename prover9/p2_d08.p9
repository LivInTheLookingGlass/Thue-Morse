% Predicate to determine if a number is Evil
count_ones(0, 0).  % Base case: 0 has 0 ones.

count_ones(x, c) :- 
    x > 0 & count_ones(x // 2, c1) & (x mod 2 = 1 -> c = c1 + 1 ; c = c1).

% Define the Evil numbers
Evil(n, x) :- 
    nonneg_int(n) & nonneg_int(x) & count_ones(x, c) & (c mod 2 = 0) & 
    count_ones(n, k) & (x < n + k).

% Define a predicate to get the n-th Evil number
get_evil(n, x) :- 
    nonneg_int(n) & nonneg_int(x) & Evil(n, x).

% Define T_{2,8}(n)
nonneg_int(n) -> 
    T_2_8(n) = mod(get_evil(n, x) - 2 * n, 2).
